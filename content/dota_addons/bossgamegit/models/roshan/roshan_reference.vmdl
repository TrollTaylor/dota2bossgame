<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "roshan_reference"
				string m_meshFile = "models/roshan/roshan_reference.smd"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = NULL
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "Root_0"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Root_0"
					float(3) m_vMinBounds = ( -38.768654, -60.010536, -48.414978 )
					float(3) m_vMaxBounds = ( 52.377686, 60.010574, 43.952942 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Spine_0"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Spine_0"
					float(3) m_vMinBounds = ( -24.253632, -49.646877, -55.614685 )
					float(3) m_vMaxBounds = ( 78.559067, 49.646938, 63.971970 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Spine_1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Spine_1"
					float(3) m_vMinBounds = ( -37.554394, -89.010712, -64.438019 )
					float(3) m_vMaxBounds = ( 98.387650, 149.949692, 91.176788 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Spine_2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Spine_2"
					float(3) m_vMinBounds = ( -31.657341, -69.263962, -63.765244 )
					float(3) m_vMaxBounds = ( 66.287819, 69.264023, 65.402908 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "clavicle_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "clavicle_R"
					float(3) m_vMinBounds = ( -77.831223, -37.257782, -42.198429 )
					float(3) m_vMaxBounds = ( -2.467331, 38.103989, 56.134777 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "clavicle_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "clavicle_L"
					float(3) m_vMinBounds = ( 2.467361, -38.104019, -56.134773 )
					float(3) m_vMaxBounds = ( 77.831299, 37.257767, 42.198402 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bicep_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bicep_R"
					float(3) m_vMinBounds = ( -81.870255, -60.249069, -55.601532 )
					float(3) m_vMaxBounds = ( 42.964981, 28.732819, 56.604965 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bicep_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bicep_L"
					float(3) m_vMinBounds = ( -54.284397, -40.573799, -57.986076 )
					float(3) m_vMaxBounds = ( 83.228271, 73.208282, 57.973473 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "tail0_0"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "tail0_0"
					float(3) m_vMinBounds = ( -28.503784, -54.572750, -44.953705 )
					float(3) m_vMaxBounds = ( 92.692207, 53.760212, 39.368622 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "thigh_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "thigh_L"
					float(3) m_vMinBounds = ( -15.993271, -30.492825, -34.172890 )
					float(3) m_vMaxBounds = ( 103.659210, 24.088905, 37.268539 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "thigh_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "thigh_R"
					float(3) m_vMinBounds = ( -103.659195, -58.200821, -37.268570 )
					float(3) m_vMaxBounds = ( 15.993301, 43.828064, 34.172852 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "elbow_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "elbow_R"
					float(3) m_vMinBounds = ( -88.485474, -28.579765, -67.558113 )
					float(3) m_vMaxBounds = ( 47.326767, 50.854240, 47.953781 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "elbow_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "elbow_L"
					float(3) m_vMinBounds = ( -64.144058, -50.854240, -65.546600 )
					float(3) m_vMaxBounds = ( 88.485519, 20.398277, 67.558105 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Head_0"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Head_0"
					float(3) m_vMinBounds = ( -7.565666, -58.037724, -40.646744 )
					float(3) m_vMaxBounds = ( 50.990623, 58.037785, 35.154678 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Wing1_0_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Wing1_0_R"
					float(3) m_vMinBounds = ( -148.658142, -59.121445, -17.510880 )
					float(3) m_vMaxBounds = ( 22.028637, 20.182220, 63.903885 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Wing0_0_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Wing0_0_L"
					float(3) m_vMinBounds = ( -22.028587, -20.182175, -10.463760 )
					float(3) m_vMaxBounds = ( 62.988358, 29.249863, 17.510773 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "wrist_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "wrist_R"
					float(3) m_vMinBounds = ( -60.473450, -22.131264, -36.517788 )
					float(3) m_vMaxBounds = ( 21.042376, 22.678314, 26.155518 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "wrist_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "wrist_L"
					float(3) m_vMinBounds = ( -34.603500, -22.740021, -26.155514 )
					float(3) m_vMaxBounds = ( 60.473495, 22.131271, 33.315880 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "tail0_1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "tail0_1"
					float(3) m_vMinBounds = ( -55.139603, -28.302679, -41.593369 )
					float(3) m_vMaxBounds = ( 73.216492, 28.302664, 26.759827 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "knee_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "knee_L"
					float(3) m_vMinBounds = ( -14.194023, -14.722336, -17.880493 )
					float(3) m_vMaxBounds = ( 70.193741, 21.228493, 35.892262 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "knee_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "knee_R"
					float(3) m_vMinBounds = ( -70.193756, -21.228531, -35.892235 )
					float(3) m_vMaxBounds = ( 14.194069, 14.722298, 17.880524 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "flag1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "flag1"
					float(3) m_vMinBounds = ( 9.987869, -16.016052, -7.186737 )
					float(3) m_vMaxBounds = ( 73.239853, 16.353058, 10.001255 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Head_1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Head_1"
					float(3) m_vMinBounds = ( -16.852692, -46.030540, -39.752258 )
					float(3) m_vMaxBounds = ( 51.087494, 46.031677, 27.491943 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Wing1_1_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Wing1_1_R"
					float(3) m_vMinBounds = ( -81.977280, -59.121460, -97.496445 )
					float(3) m_vMaxBounds = ( 46.690380, 16.957275, 8.531693 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "thumb_0_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "thumb_0_R"
					float(3) m_vMinBounds = ( -28.086250, -21.086502, -16.433281 )
					float(3) m_vMaxBounds = ( 6.188526, 15.431335, 15.260162 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "mid_0_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "mid_0_R"
					float(3) m_vMinBounds = ( -33.266571, -32.296341, -14.812027 )
					float(3) m_vMaxBounds = ( 37.695396, 11.630707, 23.497787 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "index_0_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "index_0_R"
					float(3) m_vMinBounds = ( -28.391300, -9.952965, -11.954636 )
					float(3) m_vMaxBounds = ( 14.779831, 10.117302, 18.829788 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "ring_0_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "ring_0_R"
					float(3) m_vMinBounds = ( -24.177788, -8.445679, -12.527809 )
					float(3) m_vMaxBounds = ( 5.200562, 7.903172, 13.006378 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Wing0_1_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Wing0_1_L"
					float(3) m_vMinBounds = ( -33.121880, -16.902802, -13.305710 )
					float(3) m_vMaxBounds = ( 90.259712, 43.229919, 88.288147 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "thumb_0_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "thumb_0_L"
					float(3) m_vMinBounds = ( -6.957829, -15.431389, -24.371185 )
					float(3) m_vMaxBounds = ( 32.315002, 21.086441, 16.433258 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "mid_0_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "mid_0_L"
					float(3) m_vMinBounds = ( -4.414429, -11.630699, -10.585106 )
					float(3) m_vMaxBounds = ( 29.284546, 11.055622, 14.812004 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "index_0_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "index_0_L"
					float(3) m_vMinBounds = ( -14.779831, -10.117264, -18.829826 )
					float(3) m_vMaxBounds = ( 28.391338, 9.952942, 11.954605 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "ring_0_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "ring_0_L"
					float(3) m_vMinBounds = ( -30.463722, -11.800644, -23.339661 )
					float(3) m_vMaxBounds = ( 24.177864, 21.168293, 12.527771 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "tail0_2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "tail0_2"
					float(3) m_vMinBounds = ( -31.907349, -16.583866, -41.938057 )
					float(3) m_vMaxBounds = ( 83.151794, 16.583824, 17.698204 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "ankle_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "ankle_L"
					float(3) m_vMinBounds = ( -17.296921, -18.560486, -30.211494 )
					float(3) m_vMaxBounds = ( 54.167862, 17.624390, 20.503258 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "ankle_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "ankle_R"
					float(3) m_vMinBounds = ( -54.167809, -17.624390, -20.503361 )
					float(3) m_vMaxBounds = ( 17.296972, 18.560417, 30.211468 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "jaw"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "jaw"
					float(3) m_vMinBounds = ( -27.553551, -24.814514, -29.839941 )
					float(3) m_vMaxBounds = ( 38.424423, 12.542694, 63.199852 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Wing1_2_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Wing1_2_R"
					float(3) m_vMinBounds = ( -164.584366, -95.122925, -98.055283 )
					float(3) m_vMaxBounds = ( 36.621323, 24.960861, 22.754395 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "thumb_1_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "thumb_1_R"
					float(3) m_vMinBounds = ( -30.661774, -44.220856, -120.004921 )
					float(3) m_vMaxBounds = ( 82.041107, 21.049904, 45.149666 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "mid_1_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "mid_1_R"
					float(3) m_vMinBounds = ( -35.487373, -6.283485, -12.171783 )
					float(3) m_vMaxBounds = ( 4.727997, 5.332623, 7.942234 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "index_1_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "index_1_R"
					float(3) m_vMinBounds = ( -27.657333, -8.374611, -10.680428 )
					float(3) m_vMaxBounds = ( 10.216125, 8.246826, 8.703484 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "ring_1_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "ring_1_R"
					float(3) m_vMinBounds = ( -30.874237, -25.494930, -12.523872 )
					float(3) m_vMaxBounds = ( 14.334091, 11.670391, 58.647980 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Wing0_2_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Wing0_2_L"
					float(3) m_vMinBounds = ( -41.301723, -20.776062, -22.763931 )
					float(3) m_vMaxBounds = ( 156.958862, 87.710472, 94.555450 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "thumb_1_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "thumb_1_L"
					float(3) m_vMinBounds = ( -99.131142, -39.603348, -55.746216 )
					float(3) m_vMaxBounds = ( 30.794136, 46.039764, 103.230896 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "mid_1_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "mid_1_L"
					float(3) m_vMinBounds = ( -10.239761, -12.183426, -7.934153 )
					float(3) m_vMaxBounds = ( 35.485672, 6.278473, 12.176819 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "index_1_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "index_1_L"
					float(3) m_vMinBounds = ( -10.754700, -8.233093, -8.149719 )
					float(3) m_vMaxBounds = ( 27.924500, 8.396339, 11.188385 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "ring_1_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "ring_1_L"
					float(3) m_vMinBounds = ( -3.327072, -8.017593, -7.147360 )
					float(3) m_vMaxBounds = ( 30.689438, 6.296810, 12.227308 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "flag2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "flag2"
					float(3) m_vMinBounds = ( -33.582672, -17.762177, -12.239292 )
					float(3) m_vMaxBounds = ( 83.330963, 7.549309, 11.329311 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "tail0_3"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "tail0_3"
					float(3) m_vMinBounds = ( -111.440109, -26.217430, -69.662758 )
					float(3) m_vMaxBounds = ( 31.306866, 22.706833, 17.494972 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "toeBall_L"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "toeBall_L"
					float(3) m_vMinBounds = ( -155.185394, -41.803528, -13.540764 )
					float(3) m_vMaxBounds = ( 48.613815, 34.074905, 105.323662 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "toeBall_R"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "toeBall_R"
					float(3) m_vMinBounds = ( -48.613861, -34.074738, -108.162819 )
					float(3) m_vMaxBounds = ( 161.870270, 54.063057, 13.540680 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "BindPose"
			string m_Filepath = "models/roshan/roshan_anims/BindPose.smd"
			int m_nStartframe = 0
			int m_nEndframe = 0
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_attack"
			string m_Filepath = "models/roshan/roshan_anims/roshan_attack.smd"
			int m_nStartframe = 0
			int m_nEndframe = 30
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_attack2"
			string m_Filepath = "models/roshan/roshan_anims/roshan_attack2.smd"
			int m_nStartframe = 0
			int m_nEndframe = 30
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_death_frostivus"
			string m_Filepath = "models/roshan/roshan_anims/roshan_death_frostivus.smd"
			int m_nStartframe = 0
			int m_nEndframe = 74
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_die"
			string m_Filepath = "models/roshan/roshan_anims/roshan_die.smd"
			int m_nStartframe = 0
			int m_nEndframe = 23
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_flail"
			string m_Filepath = "models/roshan/roshan_anims/roshan_flail.smd"
			int m_nStartframe = 0
			int m_nEndframe = 60
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_FLAIL"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_idle"
			string m_Filepath = "models/roshan/roshan_anims/roshan_idle.smd"
			int m_nStartframe = 0
			int m_nEndframe = 80
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_portrait"
			string m_Filepath = "models/roshan/roshan_anims/roshan_portrait.smd"
			int m_nStartframe = 0
			int m_nEndframe = 80
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_run"
			string m_Filepath = "models/roshan/roshan_anims/roshan_run.smd"
			int m_nStartframe = 0
			int m_nEndframe = 40
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				CMotionFrame
				{
					int m_nFrame = 0
					bool m_bExtractTX = true
					bool m_bExtractTY = true
					bool m_bExtractTZ = false
					bool m_bExtractRX = false
					bool m_bExtractRY = false
					bool m_bExtractRZ = false
					bool m_bDiscardTX = false
					bool m_bDiscardTY = false
					bool m_bDiscardTZ = false
					bool m_bDiscardRX = false
					bool m_bDiscardRY = false
					bool m_bDiscardRZ = false
				}
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_slam"
			string m_Filepath = "models/roshan/roshan_anims/roshan_slam.smd"
			int m_nStartframe = 0
			int m_nEndframe = 30
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_stun"
			string m_Filepath = "models/roshan/roshan_anims/roshan_stun.smd"
			int m_nStartframe = 0
			int m_nEndframe = 75
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DISABLED"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "roshan_stun_to_idle"
			string m_Filepath = "models/roshan/roshan_anims/roshan_stun_to_idle.smd"
			int m_nStartframe = 0
			int m_nEndframe = 15
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = ""
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "sr_roshan_firebreath"
			string m_Filepath = "models/roshan/roshan_anims/sr_roshan_firebreath.smd"
			int m_nStartframe = 0
			int m_nEndframe = 160
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}